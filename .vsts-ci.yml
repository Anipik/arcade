resources:
  repositories:
  # shared library repository
  - repository: arcade-templates
    type: github
    endpoint: DotNet-Bot GitHub Connection
    name: dotnet/arcade
    ref: refs/heads/templates

phases:
- template: /eng/common/templates/phases/base.yml@arcade-templates
  parameters:
    # name of phase
    name: Windows_NT

    # define the queue
    queue:
      name: Hosted VS2017
      parallel: 99
      matrix:
        Build_Debug:
          _BuildConfig: Debug
        Build_Release:
          _BuildConfig: Release

    # Build steps
    steps:
    - task: BatchScript@1 
      displayName: VsDevCmd 
      inputs: 
        filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat' 
        modifyEnvironment: true 
    - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine
      name: Build
      condition: succeeded()
    - task: PublishTestResults@2 
      displayName: Publish Test Results 
      inputs: 
        testRunTitle: 'Windows Tests' 
        testRunner: XUnit 
        testResultsFiles: 'artifacts/**/*UnitTests*.xml' 
        publishRunAttachments: true 
        mergeTestResults: true 
      condition: always() 

- template: /eng/common/templates/phases/base.yml@arcade-templates
  parameters:
    # name of phase
    name: Linux

    # define optional variables
    variables:
      _PREVIEW_VSTS_DOCKER_IMAGE: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304
    
    # define the queue
    queue: 
      name: DotNetCore-Linux
      demands:
        - agent.os -equals Linux
      parallel: 99
      matrix:
        Build_Debug:
          _BuildConfig: Debug 
        Build_Release:
          _BuildConfig: Release

    # build steps
    steps:
    - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --prepareMachine
      name: Build
      condition: succeeded()
    - task: PublishTestResults@2 
      displayName: Publish Test Results 
      inputs: 
        testRunTitle: 'Linux Test Results' 
        testRunner: XUnit 
        testResultsFiles: 'artifacts/**/*UnitTests*.xml' 
        publishRunAttachments: true 
        mergeTestResults: true 
      condition: always() 
